version: 2.1

orbs:
  node: circleci/node@5.2.0

workflows:
  build-and-deploy:
    jobs:
      - build_image
      - sonarqube_scan
      - hold:
          type: approval
          requires:
            - build_image
      - deploy_image:
          requires:
            - hold

jobs:
  build_image:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker:
          version: docker24
      - run:
          name: Build and Save Image
          command: |
            export DOCKER_BRANCH_NAME="$(echo $CIRCLE_BRANCH)"
            export DOCKER_BRANCH="$(echo $DOCKER_BRANCH_NAME | sed 's/\//-/g')"
            export DOCKER_IMAGE_NAME="ghcr.io/billchirico/$IMAGE_NAME:$(echo $DOCKER_BRANCH)"
            mkdir image
            docker image build --tag "$DOCKER_IMAGE_NAME" --file Dockerfile .
            docker image save -o "image/streamsentry_${DOCKER_BRANCH}" "${DOCKER_IMAGE_NAME}"
      - persist_to_workspace:
          root: image/
          paths:
            - .

  deploy_image:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: docker24
      - run:
          name: Publish Image
          command: |
            export DOCKER_BRANCH="$(echo $CIRCLE_BRANCH | sed 's/\//-/g')"
            export DOCKER_IMAGE_NAME="ghcr.io/billchirico/$IMAGE_NAME:$(echo $DOCKER_BRANCH)"
            echo DOCKER_BRANCH
            docker image load --input "StreamSentry_${DOCKER_BRANCH}"
            docker login ghcr.io -u billchirico -p $GITHUB_PAT

            docker push $DOCKER_IMAGE_NAME

  sonarqube_scan:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:8.0-alpine
    description: Start Scan
    parameters:
      host_url:
        type: string
        default: https://sonarcloud.io
      project_key:
        type: string
        default: 01962793-a772-45be-81f6-b0b9c44d3251
      sonarlogin:
        type: string
        default: ${SONAR_TOKEN}
      organization:
        type: string
        default: 4f7cdcb9-07fe-4418-ab60-e7596679bbc3
      pull_request_base:
        type: string
        default: develop
    steps:
      - checkout
      - run:
          name: Install .NET Tool
          command: |
            apk update
            apk upgrade
            apk add ca-certificates
            update-ca-certificates
            apk add openjdk17
            dotnet tool install --global dotnet-sonarscanner
            dotnet nuget add source https://www.myget.org/F/discord-net/api/v3/index.json --name DiscordNet
            export PATH="$PATH:/root/.dotnet/tools"
            # dotnet-sonarscanner begin /k:"parameters.project_key" /o:"4f7cdcb9-07fe-4418-ab60-e7596679bbc3" /d:sonar.host.url="parameters.host_url" /d:sonar.login="188be1660109809ce5cee3e508d69ffe30db25b3"
            dotnet sonarscanner begin \
                /k:<< parameters.project_key >> \
                /o:<< parameters.organization >> \
                /d:sonar.login="188be1660109809ce5cee3e508d69ffe30db25b3" \
                /d:sonar.host.url=<< parameters.host_url >> \
                /d:sonar.pullrequest.branch=${CIRCLE_BRANCH} \
                /d:sonar.pullrequest.base=<< parameters.pull_request_base >>
            dotnet build StreamSentry-discord/StreamSentry-discord.sln
            dotnet-sonarscanner end /d:sonar.login="188be1660109809ce5cee3e508d69ffe30db25b3" mv /root/project/.sonarqube/out/.sonar/report-task.txt .scannerwork
      - persist_to_workspace:
          paths:
            - .scannerwork/report-task.txt
          root: .
